---
layout: post
title: A first look at the new Or & Contains database operators
description: 
date: 2024-02-7
cover: /images/blog/db-operators-overview/cover.png
timeToRead: 2
author: dennis-ivy
category: engineering
featured: false
---

We’re excited to announce the addition of two new database operators for performing queries, the  `or` and `contains` operators. In this release we aimed to add more flexibility by allowing partial text matches when searching an Appwrite database, as well as the capabilities for writing logical OR queries. 

These two operators have been highly requested from the Appwrite community and we’re excited to show you how to use them, so let’s jump on in and take a look! 

- `contains` - search for partial text matches
- `or` -  write logical OR queries

&nbsp;   
## `contains` operator
&nbsp;  
The contains operator is a great addition to the existing text search operators such as `startsWith` & `endsWith`, and can be used in combination with these two. With contains we can now perform broader search by matching against any text within a substring. This is extremely useful when searching a large body of text or when placement of key words is unknown. 

```js

db.listDocuments(
    '<DATABASE_ID>',
    '<COLLECTION_ID>',
	  [
	    Query.contains('content', ['happy', 'love']),
	  ]
   )
```

It’s important to note that the contains operator also works on array attributes as well. For example, if we set a string attribute to act as an array, you could search this array in the same way you would search any other string.

```js
 Query.contains('tags', ['mystery', 'comedy', 'PG-13'])
```
&nbsp;  
## `or` operator
&nbsp;  
The logical OR operator allows us to nest queries in an OR condition. This gives us the ability to group queries together for more dynamic search. 

To use the OR operator pass `Query.or([...])` to the queries array and provide at least two queries within the nested array. 

```js
db.listDocuments(
	 '<DATABASE_ID>',
	 '<COLLECTION_ID>',
        [
        Query.or([
            Query.contains('name','ivy'),
            Query.greaterThan('age',30)
            ])
        ]
  )
```

The example shown will return all people that contain the substring "ivy' somewhere in their name OR are older than 30 years old. Previously there was no native way to do this kind of search from Appwrite's SDK's

To learn more be sure to check out the linked documentation and video tutorial:

- [Documentation](https://appwrite.io/docs/products/databases/queries)
- [Video tutorial](#)